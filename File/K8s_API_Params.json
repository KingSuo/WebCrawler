{
    "AdmissionregistrationApi": {
        "get_api_group": null
    },
    "AdmissionregistrationV1alpha1Api": {
        "create_initializer_configuration": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_initializer_configuration": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_initializer_configuration": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "get_api_resources": null,
        "list_initializer_configuration": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "patch_initializer_configuration": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_initializer_configuration": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "replace_initializer_configuration": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        }
    },
    "AdmissionregistrationV1beta1Api": {
        "create_mutating_webhook_configuration": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_validating_webhook_configuration": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_mutating_webhook_configuration": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_validating_webhook_configuration": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_mutating_webhook_configuration": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "delete_validating_webhook_configuration": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "get_api_resources": null,
        "list_mutating_webhook_configuration": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_validating_webhook_configuration": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "patch_mutating_webhook_configuration": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_validating_webhook_configuration": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_mutating_webhook_configuration": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "read_validating_webhook_configuration": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "replace_mutating_webhook_configuration": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_validating_webhook_configuration": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        }
    },
    "ApiextensionsApi": {
        "get_api_group": null
    },
    "ApiextensionsV1beta1Api": {
        "create_custom_resource_definition": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_custom_resource_definition": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_custom_resource_definition": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "get_api_resources": null,
        "list_custom_resource_definition": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "patch_custom_resource_definition": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_custom_resource_definition_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_custom_resource_definition": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "read_custom_resource_definition_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_custom_resource_definition": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_custom_resource_definition_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        }
    },
    "ApiregistrationApi": {
        "get_api_group": null
    },
    "ApiregistrationV1Api": {
        "create_api_service": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "delete_api_service": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_api_service": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "get_api_resources": null,
        "list_api_service": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "patch_api_service": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_api_service_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_api_service": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "read_api_service_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_api_service": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_api_service_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        }
    },
    "ApiregistrationV1beta1Api": {
        "create_api_service": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "delete_api_service": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_api_service": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "get_api_resources": null,
        "list_api_service": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "patch_api_service": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_api_service_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_api_service": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "read_api_service_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_api_service": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_api_service_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        }
    },
    "ApisApi": {
        "get_api_versions": null
    },
    "AppsApi": {
        "get_api_group": null
    },
    "AppsV1Api": {
        "create_namespaced_controller_revision": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_namespaced_daemon_set": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_namespaced_deployment": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_namespaced_replica_set": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_namespaced_stateful_set": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_namespaced_controller_revision": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_namespaced_daemon_set": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_namespaced_deployment": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_namespaced_replica_set": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_namespaced_stateful_set": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_controller_revision": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_daemon_set": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_deployment": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_replica_set": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_stateful_set": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "get_api_resources": null,
        "list_controller_revision_for_all_namespaces": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_daemon_set_for_all_namespaces": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_deployment_for_all_namespaces": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_namespaced_controller_revision": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_namespaced_daemon_set": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_namespaced_deployment": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_namespaced_replica_set": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_namespaced_stateful_set": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_replica_set_for_all_namespaces": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_stateful_set_for_all_namespaces": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_controller_revision": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_daemon_set": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_daemon_set_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_deployment": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_deployment_scale": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_deployment_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_replica_set": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_replica_set_scale": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_replica_set_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_stateful_set": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_stateful_set_scale": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_stateful_set_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_controller_revision": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_daemon_set": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_daemon_set_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_deployment": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_deployment_scale": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_deployment_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_replica_set": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_replica_set_scale": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_replica_set_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_stateful_set": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_stateful_set_scale": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_stateful_set_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_controller_revision": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_daemon_set": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_daemon_set_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_deployment": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_deployment_scale": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_deployment_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_replica_set": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_replica_set_scale": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_replica_set_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_stateful_set": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_stateful_set_scale": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_stateful_set_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        }
    },
    "AppsV1beta1Api": {
        "create_namespaced_controller_revision": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_namespaced_deployment": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_namespaced_deployment_rollback": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_namespaced_stateful_set": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_namespaced_controller_revision": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_namespaced_deployment": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_namespaced_stateful_set": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_controller_revision": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_deployment": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_stateful_set": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "get_api_resources": null,
        "list_controller_revision_for_all_namespaces": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_deployment_for_all_namespaces": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_namespaced_controller_revision": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_namespaced_deployment": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_namespaced_stateful_set": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_stateful_set_for_all_namespaces": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_controller_revision": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_deployment": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_deployment_scale": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_deployment_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_stateful_set": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_stateful_set_scale": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_stateful_set_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_controller_revision": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_deployment": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_deployment_scale": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_deployment_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_stateful_set": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_stateful_set_scale": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_stateful_set_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_controller_revision": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_deployment": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_deployment_scale": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_deployment_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_stateful_set": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_stateful_set_scale": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_stateful_set_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        }
    },
    "AppsV1beta2Api": {
        "create_namespaced_controller_revision": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_namespaced_daemon_set": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_namespaced_deployment": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_namespaced_replica_set": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_namespaced_stateful_set": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_namespaced_controller_revision": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_namespaced_daemon_set": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_namespaced_deployment": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_namespaced_replica_set": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_namespaced_stateful_set": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_controller_revision": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_daemon_set": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_deployment": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_replica_set": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_stateful_set": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "get_api_resources": null,
        "list_controller_revision_for_all_namespaces": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_daemon_set_for_all_namespaces": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_deployment_for_all_namespaces": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_namespaced_controller_revision": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_namespaced_daemon_set": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_namespaced_deployment": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_namespaced_replica_set": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_namespaced_stateful_set": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_replica_set_for_all_namespaces": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_stateful_set_for_all_namespaces": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_controller_revision": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_daemon_set": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_daemon_set_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_deployment": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_deployment_scale": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_deployment_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_replica_set": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_replica_set_scale": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_replica_set_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_stateful_set": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_stateful_set_scale": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_stateful_set_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_controller_revision": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_daemon_set": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_daemon_set_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_deployment": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_deployment_scale": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_deployment_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_replica_set": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_replica_set_scale": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_replica_set_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_stateful_set": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_stateful_set_scale": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_stateful_set_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_controller_revision": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_daemon_set": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_daemon_set_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_deployment": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_deployment_scale": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_deployment_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_replica_set": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_replica_set_scale": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_replica_set_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_stateful_set": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_stateful_set_scale": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_stateful_set_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        }
    },
    "AuthenticationApi": {
        "get_api_group": null
    },
    "AuthenticationV1Api": {
        "create_token_review": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "get_api_resources": null
    },
    "AuthenticationV1beta1Api": {
        "create_token_review": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "get_api_resources": null
    },
    "AuthorizationApi": {
        "get_api_group": null
    },
    "AuthorizationV1Api": {
        "create_namespaced_local_subject_access_review": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_self_subject_access_review": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_self_subject_rules_review": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_subject_access_review": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "get_api_resources": null
    },
    "AuthorizationV1beta1Api": {
        "create_namespaced_local_subject_access_review": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_self_subject_access_review": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_self_subject_rules_review": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_subject_access_review": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "get_api_resources": null
    },
    "AutoscalingApi": {
        "get_api_group": null
    },
    "AutoscalingV1Api": {
        "create_namespaced_horizontal_pod_autoscaler": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_namespaced_horizontal_pod_autoscaler": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_horizontal_pod_autoscaler": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "get_api_resources": null,
        "list_horizontal_pod_autoscaler_for_all_namespaces": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_namespaced_horizontal_pod_autoscaler": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_horizontal_pod_autoscaler": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_horizontal_pod_autoscaler_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_horizontal_pod_autoscaler": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_horizontal_pod_autoscaler_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_horizontal_pod_autoscaler": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_horizontal_pod_autoscaler_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        }
    },
    "AutoscalingV2beta1Api": {
        "create_namespaced_horizontal_pod_autoscaler": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_namespaced_horizontal_pod_autoscaler": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_horizontal_pod_autoscaler": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "get_api_resources": null,
        "list_horizontal_pod_autoscaler_for_all_namespaces": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_namespaced_horizontal_pod_autoscaler": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_horizontal_pod_autoscaler": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_horizontal_pod_autoscaler_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_horizontal_pod_autoscaler": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_horizontal_pod_autoscaler_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_horizontal_pod_autoscaler": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_horizontal_pod_autoscaler_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        }
    },
    "BatchApi": {
        "get_api_group": null
    },
    "BatchV1Api": {
        "create_namespaced_job": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_namespaced_job": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_job": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "get_api_resources": null,
        "list_job_for_all_namespaces": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_namespaced_job": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_job": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_job_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_job": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_job_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_job": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_job_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        }
    },
    "BatchV1beta1Api": {
        "create_namespaced_cron_job": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_namespaced_cron_job": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_cron_job": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "get_api_resources": null,
        "list_cron_job_for_all_namespaces": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_namespaced_cron_job": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_cron_job": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_cron_job_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_cron_job": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_cron_job_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_cron_job": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_cron_job_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        }
    },
    "BatchV2alpha1Api": {
        "create_namespaced_cron_job": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_namespaced_cron_job": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_cron_job": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "get_api_resources": null,
        "list_cron_job_for_all_namespaces": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_namespaced_cron_job": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_cron_job": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_cron_job_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_cron_job": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_cron_job_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_cron_job": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_cron_job_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        }
    },
    "CertificatesApi": {
        "get_api_group": null
    },
    "CertificatesV1beta1Api": {
        "create_certificate_signing_request": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "delete_certificate_signing_request": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_certificate_signing_request": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "get_api_resources": null,
        "list_certificate_signing_request": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "patch_certificate_signing_request": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_certificate_signing_request_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_certificate_signing_request": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "read_certificate_signing_request_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_certificate_signing_request": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_certificate_signing_request_approval": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_certificate_signing_request_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        }
    },
    "CoreApi": {
        "get_api_versions": null
    },
    "CoreV1Api": {
        "connect_delete_namespaced_pod_proxy": {
            "path": {
                "Type": "str",
                "Description": "Path is the URL path to use for the current proxy request to pod.",
                "Notes": "[optional]"
            }
        },
        "connect_delete_namespaced_pod_proxy_with_path": {
            "path2": {
                "Type": "str",
                "Description": "Path is the URL path to use for the current proxy request to pod.",
                "Notes": "[optional]"
            }
        },
        "connect_delete_namespaced_service_proxy": {
            "path": {
                "Type": "str",
                "Description": null,
                "Notes": "[optional]"
            }
        },
        "connect_delete_namespaced_service_proxy_with_path": {
            "path2": {
                "Type": "str",
                "Description": null,
                "Notes": "[optional]"
            }
        },
        "connect_delete_node_proxy": {
            "path": {
                "Type": "str",
                "Description": "Path is the URL path to use for the current proxy request to node.",
                "Notes": "[optional]"
            }
        },
        "connect_delete_node_proxy_with_path": {
            "path2": {
                "Type": "str",
                "Description": "Path is the URL path to use for the current proxy request to node.",
                "Notes": "[optional]"
            }
        },
        "connect_get_namespaced_pod_attach": {
            "tty": {
                "Type": "bool",
                "Description": "TTY if true indicates that a tty will be allocated for the attach call. This is passed through the container runtime so the tty is allocated on the worker node by the container runtime. Defaults to false.",
                "Notes": "[optional]"
            }
        },
        "connect_get_namespaced_pod_exec": {
            "tty": {
                "Type": "bool",
                "Description": "TTY if true indicates that a tty will be allocated for the exec call. Defaults to false.",
                "Notes": "[optional]"
            }
        },
        "connect_get_namespaced_pod_portforward": {
            "ports": {
                "Type": "int",
                "Description": "List of ports to forward Required when using WebSockets",
                "Notes": "[optional]"
            }
        },
        "connect_get_namespaced_pod_proxy": {
            "path": {
                "Type": "str",
                "Description": "Path is the URL path to use for the current proxy request to pod.",
                "Notes": "[optional]"
            }
        },
        "connect_get_namespaced_pod_proxy_with_path": {
            "path2": {
                "Type": "str",
                "Description": "Path is the URL path to use for the current proxy request to pod.",
                "Notes": "[optional]"
            }
        },
        "connect_get_namespaced_service_proxy": {
            "path": {
                "Type": "str",
                "Description": null,
                "Notes": "[optional]"
            }
        },
        "connect_get_namespaced_service_proxy_with_path": {
            "path2": {
                "Type": "str",
                "Description": null,
                "Notes": "[optional]"
            }
        },
        "connect_get_node_proxy": {
            "path": {
                "Type": "str",
                "Description": "Path is the URL path to use for the current proxy request to node.",
                "Notes": "[optional]"
            }
        },
        "connect_get_node_proxy_with_path": {
            "path2": {
                "Type": "str",
                "Description": "Path is the URL path to use for the current proxy request to node.",
                "Notes": "[optional]"
            }
        },
        "connect_head_namespaced_pod_proxy": {
            "path": {
                "Type": "str",
                "Description": "Path is the URL path to use for the current proxy request to pod.",
                "Notes": "[optional]"
            }
        },
        "connect_head_namespaced_pod_proxy_with_path": {
            "path2": {
                "Type": "str",
                "Description": "Path is the URL path to use for the current proxy request to pod.",
                "Notes": "[optional]"
            }
        },
        "connect_head_namespaced_service_proxy": {
            "path": {
                "Type": "str",
                "Description": null,
                "Notes": "[optional]"
            }
        },
        "connect_head_namespaced_service_proxy_with_path": {
            "path2": {
                "Type": "str",
                "Description": null,
                "Notes": "[optional]"
            }
        },
        "connect_head_node_proxy": {
            "path": {
                "Type": "str",
                "Description": "Path is the URL path to use for the current proxy request to node.",
                "Notes": "[optional]"
            }
        },
        "connect_head_node_proxy_with_path": {
            "path2": {
                "Type": "str",
                "Description": "Path is the URL path to use for the current proxy request to node.",
                "Notes": "[optional]"
            }
        },
        "connect_options_namespaced_pod_proxy": {
            "path": {
                "Type": "str",
                "Description": "Path is the URL path to use for the current proxy request to pod.",
                "Notes": "[optional]"
            }
        },
        "connect_options_namespaced_pod_proxy_with_path": {
            "path2": {
                "Type": "str",
                "Description": "Path is the URL path to use for the current proxy request to pod.",
                "Notes": "[optional]"
            }
        },
        "connect_options_namespaced_service_proxy": {
            "path": {
                "Type": "str",
                "Description": null,
                "Notes": "[optional]"
            }
        },
        "connect_options_namespaced_service_proxy_with_path": {
            "path2": {
                "Type": "str",
                "Description": null,
                "Notes": "[optional]"
            }
        },
        "connect_options_node_proxy": {
            "path": {
                "Type": "str",
                "Description": "Path is the URL path to use for the current proxy request to node.",
                "Notes": "[optional]"
            }
        },
        "connect_options_node_proxy_with_path": {
            "path2": {
                "Type": "str",
                "Description": "Path is the URL path to use for the current proxy request to node.",
                "Notes": "[optional]"
            }
        },
        "connect_patch_namespaced_pod_proxy": {
            "path": {
                "Type": "str",
                "Description": "Path is the URL path to use for the current proxy request to pod.",
                "Notes": "[optional]"
            }
        },
        "connect_patch_namespaced_pod_proxy_with_path": {
            "path2": {
                "Type": "str",
                "Description": "Path is the URL path to use for the current proxy request to pod.",
                "Notes": "[optional]"
            }
        },
        "connect_patch_namespaced_service_proxy": {
            "path": {
                "Type": "str",
                "Description": null,
                "Notes": "[optional]"
            }
        },
        "connect_patch_namespaced_service_proxy_with_path": {
            "path2": {
                "Type": "str",
                "Description": null,
                "Notes": "[optional]"
            }
        },
        "connect_patch_node_proxy": {
            "path": {
                "Type": "str",
                "Description": "Path is the URL path to use for the current proxy request to node.",
                "Notes": "[optional]"
            }
        },
        "connect_patch_node_proxy_with_path": {
            "path2": {
                "Type": "str",
                "Description": "Path is the URL path to use for the current proxy request to node.",
                "Notes": "[optional]"
            }
        },
        "connect_post_namespaced_pod_attach": {
            "tty": {
                "Type": "bool",
                "Description": "TTY if true indicates that a tty will be allocated for the attach call. This is passed through the container runtime so the tty is allocated on the worker node by the container runtime. Defaults to false.",
                "Notes": "[optional]"
            }
        },
        "connect_post_namespaced_pod_exec": {
            "tty": {
                "Type": "bool",
                "Description": "TTY if true indicates that a tty will be allocated for the exec call. Defaults to false.",
                "Notes": "[optional]"
            }
        },
        "connect_post_namespaced_pod_portforward": {
            "ports": {
                "Type": "int",
                "Description": "List of ports to forward Required when using WebSockets",
                "Notes": "[optional]"
            }
        },
        "connect_post_namespaced_pod_proxy": {
            "path": {
                "Type": "str",
                "Description": "Path is the URL path to use for the current proxy request to pod.",
                "Notes": "[optional]"
            }
        },
        "connect_post_namespaced_pod_proxy_with_path": {
            "path2": {
                "Type": "str",
                "Description": "Path is the URL path to use for the current proxy request to pod.",
                "Notes": "[optional]"
            }
        },
        "connect_post_namespaced_service_proxy": {
            "path": {
                "Type": "str",
                "Description": null,
                "Notes": "[optional]"
            }
        },
        "connect_post_namespaced_service_proxy_with_path": {
            "path2": {
                "Type": "str",
                "Description": null,
                "Notes": "[optional]"
            }
        },
        "connect_post_node_proxy": {
            "path": {
                "Type": "str",
                "Description": "Path is the URL path to use for the current proxy request to node.",
                "Notes": "[optional]"
            }
        },
        "connect_post_node_proxy_with_path": {
            "path2": {
                "Type": "str",
                "Description": "Path is the URL path to use for the current proxy request to node.",
                "Notes": "[optional]"
            }
        },
        "connect_put_namespaced_pod_proxy": {
            "path": {
                "Type": "str",
                "Description": "Path is the URL path to use for the current proxy request to pod.",
                "Notes": "[optional]"
            }
        },
        "connect_put_namespaced_pod_proxy_with_path": {
            "path2": {
                "Type": "str",
                "Description": "Path is the URL path to use for the current proxy request to pod.",
                "Notes": "[optional]"
            }
        },
        "connect_put_namespaced_service_proxy": {
            "path": {
                "Type": "str",
                "Description": null,
                "Notes": "[optional]"
            }
        },
        "connect_put_namespaced_service_proxy_with_path": {
            "path2": {
                "Type": "str",
                "Description": null,
                "Notes": "[optional]"
            }
        },
        "connect_put_node_proxy": {
            "path": {
                "Type": "str",
                "Description": "Path is the URL path to use for the current proxy request to node.",
                "Notes": "[optional]"
            }
        },
        "connect_put_node_proxy_with_path": {
            "path2": {
                "Type": "str",
                "Description": "Path is the URL path to use for the current proxy request to node.",
                "Notes": "[optional]"
            }
        },
        "create_namespace": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_namespaced_binding": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_namespaced_config_map": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_namespaced_endpoints": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_namespaced_event": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_namespaced_limit_range": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_namespaced_persistent_volume_claim": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_namespaced_pod": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_namespaced_pod_binding": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_namespaced_pod_eviction": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_namespaced_pod_template": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_namespaced_replication_controller": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_namespaced_resource_quota": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_namespaced_secret": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_namespaced_service": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_namespaced_service_account": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_node": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_persistent_volume": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_namespaced_config_map": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_namespaced_endpoints": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_namespaced_event": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_namespaced_limit_range": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_namespaced_persistent_volume_claim": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_namespaced_pod": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_namespaced_pod_template": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_namespaced_replication_controller": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_namespaced_resource_quota": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_namespaced_secret": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_namespaced_service_account": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_node": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_persistent_volume": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_namespace": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_config_map": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_endpoints": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_event": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_limit_range": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_persistent_volume_claim": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_pod": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_pod_template": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_replication_controller": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_resource_quota": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_secret": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_service": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_service_account": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "delete_node": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "delete_persistent_volume": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "get_api_resources": null,
        "list_component_status": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_config_map_for_all_namespaces": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_endpoints_for_all_namespaces": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_event_for_all_namespaces": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_limit_range_for_all_namespaces": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_namespace": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_namespaced_config_map": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_namespaced_endpoints": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_namespaced_event": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_namespaced_limit_range": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_namespaced_persistent_volume_claim": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_namespaced_pod": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_namespaced_pod_template": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_namespaced_replication_controller": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_namespaced_resource_quota": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_namespaced_secret": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_namespaced_service": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_namespaced_service_account": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_node": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_persistent_volume": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_persistent_volume_claim_for_all_namespaces": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_pod_for_all_namespaces": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_pod_template_for_all_namespaces": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_replication_controller_for_all_namespaces": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_resource_quota_for_all_namespaces": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_secret_for_all_namespaces": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_service_account_for_all_namespaces": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_service_for_all_namespaces": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "patch_namespace": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespace_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_config_map": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_endpoints": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_event": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_limit_range": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_persistent_volume_claim": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_persistent_volume_claim_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_pod": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_pod_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_pod_template": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_replication_controller": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_replication_controller_scale": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_replication_controller_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_resource_quota": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_resource_quota_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_secret": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_service": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_service_account": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_service_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_node": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_node_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_persistent_volume": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_persistent_volume_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_component_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespace": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "read_namespace_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_config_map": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_endpoints": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_event": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_limit_range": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_persistent_volume_claim": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_persistent_volume_claim_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_pod": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_pod_log": {
            "timestamps": {
                "Type": "bool",
                "Description": "If true, add an RFC3339 or RFC3339Nano timestamp at the beginning of every line of log output. Defaults to false.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_pod_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_pod_template": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_replication_controller": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_replication_controller_scale": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_replication_controller_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_resource_quota": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_resource_quota_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_secret": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_service": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_service_account": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_service_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_node": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "read_node_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_persistent_volume": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "read_persistent_volume_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespace": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespace_finalize": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespace_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_config_map": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_endpoints": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_event": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_limit_range": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_persistent_volume_claim": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_persistent_volume_claim_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_pod": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_pod_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_pod_template": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_replication_controller": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_replication_controller_scale": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_replication_controller_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_resource_quota": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_resource_quota_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_secret": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_service": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_service_account": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_service_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_node": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_node_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_persistent_volume": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_persistent_volume_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        }
    },
    "CustomObjectsApi": {
        "create_cluster_custom_object": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_namespaced_custom_object": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "delete_cluster_custom_object": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_custom_object": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.",
                "Notes": "[optional]"
            }
        },
        "get_cluster_custom_object": {
            "name": {
                "Type": "str",
                "Description": "the custom object's name",
                "Notes": null
            }
        },
        "get_namespaced_custom_object": {
            "name": {
                "Type": "str",
                "Description": "the custom object's name",
                "Notes": null
            }
        },
        "list_cluster_custom_object": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications.",
                "Notes": "[optional]"
            }
        },
        "list_namespaced_custom_object": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications.",
                "Notes": "[optional]"
            }
        },
        "patch_cluster_custom_object": {
            "body": {
                "Type": "object",
                "Description": "The JSON schema of the Resource to patch.",
                "Notes": null
            }
        },
        "patch_namespaced_custom_object": {
            "body": {
                "Type": "object",
                "Description": "The JSON schema of the Resource to patch.",
                "Notes": null
            }
        },
        "replace_cluster_custom_object": {
            "body": {
                "Type": "object",
                "Description": "The JSON schema of the Resource to replace.",
                "Notes": null
            }
        },
        "replace_namespaced_custom_object": {
            "body": {
                "Type": "object",
                "Description": "The JSON schema of the Resource to replace.",
                "Notes": null
            }
        }
    },
    "EventsApi": {
        "get_api_group": null
    },
    "EventsV1beta1Api": {
        "create_namespaced_event": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_namespaced_event": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_event": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "get_api_resources": null,
        "list_event_for_all_namespaces": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_namespaced_event": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_event": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_event": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_event": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        }
    },
    "ExtensionsApi": {
        "get_api_group": null
    },
    "ExtensionsV1beta1Api": {
        "create_namespaced_daemon_set": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_namespaced_deployment": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_namespaced_deployment_rollback": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_namespaced_ingress": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_namespaced_network_policy": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_namespaced_replica_set": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_pod_security_policy": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_namespaced_daemon_set": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_namespaced_deployment": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_namespaced_ingress": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_namespaced_network_policy": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_namespaced_replica_set": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_pod_security_policy": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_daemon_set": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_deployment": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_ingress": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_network_policy": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_replica_set": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "delete_pod_security_policy": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "get_api_resources": null,
        "list_daemon_set_for_all_namespaces": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_deployment_for_all_namespaces": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_ingress_for_all_namespaces": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_namespaced_daemon_set": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_namespaced_deployment": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_namespaced_ingress": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_namespaced_network_policy": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_namespaced_replica_set": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_network_policy_for_all_namespaces": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_pod_security_policy": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_replica_set_for_all_namespaces": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_daemon_set": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_daemon_set_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_deployment": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_deployment_scale": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_deployment_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_ingress": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_ingress_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_network_policy": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_replica_set": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_replica_set_scale": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_replica_set_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_replication_controller_dummy_scale": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_pod_security_policy": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_daemon_set": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_daemon_set_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_deployment": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_deployment_scale": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_deployment_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_ingress": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_ingress_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_network_policy": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_replica_set": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_replica_set_scale": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_replica_set_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_replication_controller_dummy_scale": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_pod_security_policy": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_daemon_set": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_daemon_set_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_deployment": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_deployment_scale": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_deployment_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_ingress": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_ingress_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_network_policy": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_replica_set": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_replica_set_scale": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_replica_set_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_replication_controller_dummy_scale": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_pod_security_policy": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        }
    },
    "LogsApi": {
        "log_file_handler": {
            "logpath": {
                "Type": "str",
                "Description": "path to the log",
                "Notes": null
            }
        },
        "log_file_list_handler": null
    },
    "NetworkingApi": {
        "get_api_group": null
    },
    "NetworkingV1Api": {
        "create_namespaced_network_policy": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_namespaced_network_policy": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_network_policy": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "get_api_resources": null,
        "list_namespaced_network_policy": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_network_policy_for_all_namespaces": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_network_policy": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_network_policy": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_network_policy": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        }
    },
    "PolicyApi": {
        "get_api_group": null
    },
    "PolicyV1beta1Api": {
        "create_namespaced_pod_disruption_budget": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_pod_security_policy": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_namespaced_pod_disruption_budget": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_pod_security_policy": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_pod_disruption_budget": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "delete_pod_security_policy": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "get_api_resources": null,
        "list_namespaced_pod_disruption_budget": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_pod_disruption_budget_for_all_namespaces": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_pod_security_policy": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_pod_disruption_budget": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_pod_disruption_budget_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_pod_security_policy": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_pod_disruption_budget": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_pod_disruption_budget_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_pod_security_policy": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_pod_disruption_budget": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_pod_disruption_budget_status": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_pod_security_policy": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        }
    },
    "RbacAuthorizationApi": {
        "get_api_group": null
    },
    "RbacAuthorizationV1alpha1Api": {
        "create_cluster_role": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_cluster_role_binding": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_namespaced_role": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_namespaced_role_binding": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "delete_cluster_role": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "delete_cluster_role_binding": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_cluster_role": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_cluster_role_binding": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_namespaced_role": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_namespaced_role_binding": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_role": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_role_binding": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "get_api_resources": null,
        "list_cluster_role": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_cluster_role_binding": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_namespaced_role": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_namespaced_role_binding": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_role_binding_for_all_namespaces": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_role_for_all_namespaces": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "patch_cluster_role": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_cluster_role_binding": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_role": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_role_binding": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_cluster_role": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_cluster_role_binding": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_role": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_role_binding": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_cluster_role": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_cluster_role_binding": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_role": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_role_binding": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        }
    },
    "RbacAuthorizationV1Api": {
        "create_cluster_role": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_cluster_role_binding": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_namespaced_role": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_namespaced_role_binding": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "delete_cluster_role": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "delete_cluster_role_binding": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_cluster_role": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_cluster_role_binding": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_namespaced_role": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_namespaced_role_binding": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_role": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_role_binding": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "get_api_resources": null,
        "list_cluster_role": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_cluster_role_binding": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_namespaced_role": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_namespaced_role_binding": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_role_binding_for_all_namespaces": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_role_for_all_namespaces": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "patch_cluster_role": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_cluster_role_binding": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_role": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_role_binding": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_cluster_role": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_cluster_role_binding": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_role": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_role_binding": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_cluster_role": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_cluster_role_binding": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_role": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_role_binding": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        }
    },
    "RbacAuthorizationV1beta1Api": {
        "create_cluster_role": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_cluster_role_binding": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_namespaced_role": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_namespaced_role_binding": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "delete_cluster_role": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "delete_cluster_role_binding": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_cluster_role": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_cluster_role_binding": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_namespaced_role": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_namespaced_role_binding": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_role": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_role_binding": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "get_api_resources": null,
        "list_cluster_role": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_cluster_role_binding": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_namespaced_role": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_namespaced_role_binding": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_role_binding_for_all_namespaces": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_role_for_all_namespaces": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "patch_cluster_role": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_cluster_role_binding": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_role": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_role_binding": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_cluster_role": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_cluster_role_binding": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_role": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_role_binding": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_cluster_role": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_cluster_role_binding": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_role": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_role_binding": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        }
    },
    "SchedulingApi": {
        "get_api_group": null
    },
    "SchedulingV1alpha1Api": {
        "create_priority_class": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_priority_class": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_priority_class": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "get_api_resources": null,
        "list_priority_class": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "patch_priority_class": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_priority_class": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "replace_priority_class": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        }
    },
    "SchedulingV1beta1Api": {
        "create_priority_class": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_priority_class": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_priority_class": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "get_api_resources": null,
        "list_priority_class": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "patch_priority_class": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_priority_class": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "replace_priority_class": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        }
    },
    "SettingsApi": {
        "get_api_group": null
    },
    "SettingsV1alpha1Api": {
        "create_namespaced_pod_preset": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_namespaced_pod_preset": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_namespaced_pod_preset": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "get_api_resources": null,
        "list_namespaced_pod_preset": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_pod_preset_for_all_namespaces": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "patch_namespaced_pod_preset": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_namespaced_pod_preset": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "replace_namespaced_pod_preset": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        }
    },
    "StorageApi": {
        "get_api_group": null
    },
    "StorageV1alpha1Api": {
        "create_volume_attachment": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_volume_attachment": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_volume_attachment": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "get_api_resources": null,
        "list_volume_attachment": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "patch_volume_attachment": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_volume_attachment": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "replace_volume_attachment": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        }
    },
    "StorageV1Api": {
        "create_storage_class": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_storage_class": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_storage_class": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "get_api_resources": null,
        "list_storage_class": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "patch_storage_class": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_storage_class": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "replace_storage_class": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        }
    },
    "StorageV1beta1Api": {
        "create_storage_class": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "create_volume_attachment": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_storage_class": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_collection_volume_attachment": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "delete_storage_class": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "delete_volume_attachment": {
            "propagation_policy": {
                "Type": "str",
                "Description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                "Notes": "[optional]"
            }
        },
        "get_api_resources": null,
        "list_storage_class": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "list_volume_attachment": {
            "watch": {
                "Type": "bool",
                "Description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                "Notes": "[optional]"
            }
        },
        "patch_storage_class": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "patch_volume_attachment": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "read_storage_class": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "read_volume_attachment": {
            "export": {
                "Type": "bool",
                "Description": "Should this value be exported.  Export strips fields that a user can not specify.",
                "Notes": "[optional]"
            }
        },
        "replace_storage_class": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        },
        "replace_volume_attachment": {
            "pretty": {
                "Type": "str",
                "Description": "If 'true', then the output is pretty printed.",
                "Notes": "[optional]"
            }
        }
    },
    "VersionApi": {
        "get_code": null
    }
}